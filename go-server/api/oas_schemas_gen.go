// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"
	"time"

	"github.com/go-faster/errors"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Alert
type Alert struct {
	ID                      int            `json:"id"`
	Title                   string         `json:"title"`
	Message                 string         `json:"message"`
	Enabled                 bool           `json:"enabled"`
	ShowOnce                bool           `json:"showOnce"`
	MaxBuild                NilInt         `json:"maxBuild"`
	Button                  NilAlertButton `json:"button"`
	MinMinutesSinceDownload OptInt         `json:"minMinutesSinceDownload"`
}

// GetID returns the value of ID.
func (s *Alert) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Alert) GetTitle() string {
	return s.Title
}

// GetMessage returns the value of Message.
func (s *Alert) GetMessage() string {
	return s.Message
}

// GetEnabled returns the value of Enabled.
func (s *Alert) GetEnabled() bool {
	return s.Enabled
}

// GetShowOnce returns the value of ShowOnce.
func (s *Alert) GetShowOnce() bool {
	return s.ShowOnce
}

// GetMaxBuild returns the value of MaxBuild.
func (s *Alert) GetMaxBuild() NilInt {
	return s.MaxBuild
}

// GetButton returns the value of Button.
func (s *Alert) GetButton() NilAlertButton {
	return s.Button
}

// GetMinMinutesSinceDownload returns the value of MinMinutesSinceDownload.
func (s *Alert) GetMinMinutesSinceDownload() OptInt {
	return s.MinMinutesSinceDownload
}

// SetID sets the value of ID.
func (s *Alert) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Alert) SetTitle(val string) {
	s.Title = val
}

// SetMessage sets the value of Message.
func (s *Alert) SetMessage(val string) {
	s.Message = val
}

// SetEnabled sets the value of Enabled.
func (s *Alert) SetEnabled(val bool) {
	s.Enabled = val
}

// SetShowOnce sets the value of ShowOnce.
func (s *Alert) SetShowOnce(val bool) {
	s.ShowOnce = val
}

// SetMaxBuild sets the value of MaxBuild.
func (s *Alert) SetMaxBuild(val NilInt) {
	s.MaxBuild = val
}

// SetButton sets the value of Button.
func (s *Alert) SetButton(val NilAlertButton) {
	s.Button = val
}

// SetMinMinutesSinceDownload sets the value of MinMinutesSinceDownload.
func (s *Alert) SetMinMinutesSinceDownload(val OptInt) {
	s.MinMinutesSinceDownload = val
}

type AlertButton struct {
	Title string  `json:"title"`
	URL   url.URL `json:"url"`
}

// GetTitle returns the value of Title.
func (s *AlertButton) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *AlertButton) GetURL() url.URL {
	return s.URL
}

// SetTitle sets the value of Title.
func (s *AlertButton) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *AlertButton) SetURL(val url.URL) {
	s.URL = val
}

// Ref: #/components/schemas/BusRoute
type BusRoute struct {
	ID         BusRouteID          `json:"id"`
	SortIdx    int                 `json:"sortIdx"`
	Name       string              `json:"name"`
	Code       string              `json:"code"`
	Color      string              `json:"color"`
	Directions []BusRouteDirection `json:"directions"`
	Vehicles   []Vehicle           `json:"vehicles"`
	Polylines  []string            `json:"polylines"`
}

// GetID returns the value of ID.
func (s *BusRoute) GetID() BusRouteID {
	return s.ID
}

// GetSortIdx returns the value of SortIdx.
func (s *BusRoute) GetSortIdx() int {
	return s.SortIdx
}

// GetName returns the value of Name.
func (s *BusRoute) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *BusRoute) GetCode() string {
	return s.Code
}

// GetColor returns the value of Color.
func (s *BusRoute) GetColor() string {
	return s.Color
}

// GetDirections returns the value of Directions.
func (s *BusRoute) GetDirections() []BusRouteDirection {
	return s.Directions
}

// GetVehicles returns the value of Vehicles.
func (s *BusRoute) GetVehicles() []Vehicle {
	return s.Vehicles
}

// GetPolylines returns the value of Polylines.
func (s *BusRoute) GetPolylines() []string {
	return s.Polylines
}

// SetID sets the value of ID.
func (s *BusRoute) SetID(val BusRouteID) {
	s.ID = val
}

// SetSortIdx sets the value of SortIdx.
func (s *BusRoute) SetSortIdx(val int) {
	s.SortIdx = val
}

// SetName sets the value of Name.
func (s *BusRoute) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *BusRoute) SetCode(val string) {
	s.Code = val
}

// SetColor sets the value of Color.
func (s *BusRoute) SetColor(val string) {
	s.Color = val
}

// SetDirections sets the value of Directions.
func (s *BusRoute) SetDirections(val []BusRouteDirection) {
	s.Directions = val
}

// SetVehicles sets the value of Vehicles.
func (s *BusRoute) SetVehicles(val []Vehicle) {
	s.Vehicles = val
}

// SetPolylines sets the value of Polylines.
func (s *BusRoute) SetPolylines(val []string) {
	s.Polylines = val
}

// Ref: #/components/schemas/BusRouteDirection
type BusRouteDirection struct {
	Name  string                       `json:"name"`
	Stops []BusRouteDirectionStopsItem `json:"stops"`
}

// GetName returns the value of Name.
func (s *BusRouteDirection) GetName() string {
	return s.Name
}

// GetStops returns the value of Stops.
func (s *BusRouteDirection) GetStops() []BusRouteDirectionStopsItem {
	return s.Stops
}

// SetName sets the value of Name.
func (s *BusRouteDirection) SetName(val string) {
	s.Name = val
}

// SetStops sets the value of Stops.
func (s *BusRouteDirection) SetStops(val []BusRouteDirectionStopsItem) {
	s.Stops = val
}

type BusRouteDirectionStopsItem struct {
	ID        string  `json:"id"`
	Name      string  `json:"name"`
	Longitude float64 `json:"longitude"`
	Latitude  float64 `json:"latitude"`
}

// GetID returns the value of ID.
func (s *BusRouteDirectionStopsItem) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *BusRouteDirectionStopsItem) GetName() string {
	return s.Name
}

// GetLongitude returns the value of Longitude.
func (s *BusRouteDirectionStopsItem) GetLongitude() float64 {
	return s.Longitude
}

// GetLatitude returns the value of Latitude.
func (s *BusRouteDirectionStopsItem) GetLatitude() float64 {
	return s.Latitude
}

// SetID sets the value of ID.
func (s *BusRouteDirectionStopsItem) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *BusRouteDirectionStopsItem) SetName(val string) {
	s.Name = val
}

// SetLongitude sets the value of Longitude.
func (s *BusRouteDirectionStopsItem) SetLongitude(val float64) {
	s.Longitude = val
}

// SetLatitude sets the value of Latitude.
func (s *BusRouteDirectionStopsItem) SetLatitude(val float64) {
	s.Latitude = val
}

// BusRouteID represents sum type.
type BusRouteID struct {
	Type   BusRouteIDType // switch on this field
	String string
	Int    int
}

// BusRouteIDType is oneOf type of BusRouteID.
type BusRouteIDType string

// Possible values for BusRouteIDType.
const (
	StringBusRouteID BusRouteIDType = "string"
	IntBusRouteID    BusRouteIDType = "int"
)

// IsString reports whether BusRouteID is string.
func (s BusRouteID) IsString() bool { return s.Type == StringBusRouteID }

// IsInt reports whether BusRouteID is int.
func (s BusRouteID) IsInt() bool { return s.Type == IntBusRouteID }

// SetString sets BusRouteID to string.
func (s *BusRouteID) SetString(v string) {
	s.Type = StringBusRouteID
	s.String = v
}

// GetString returns string and true boolean if BusRouteID is string.
func (s BusRouteID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringBusRouteID returns new BusRouteID from string.
func NewStringBusRouteID(v string) BusRouteID {
	var s BusRouteID
	s.SetString(v)
	return s
}

// SetInt sets BusRouteID to int.
func (s *BusRouteID) SetInt(v int) {
	s.Type = IntBusRouteID
	s.Int = v
}

// GetInt returns int and true boolean if BusRouteID is int.
func (s BusRouteID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntBusRouteID returns new BusRouteID from int.
func NewIntBusRouteID(v int) BusRouteID {
	var s BusRouteID
	s.SetInt(v)
	return s
}

// DeleteV1DiningUserUnauthorized is response for DeleteV1DiningUser operation.
type DeleteV1DiningUserUnauthorized struct{}

func (*DeleteV1DiningUserUnauthorized) deleteV1DiningUserRes() {}

// Ref: #/components/schemas/DiningUser
type DiningUser struct {
	ID             string `json:"id"`
	FirstName      string `json:"firstName"`
	LastName       string `json:"lastName"`
	PhotoJpeg      []byte `json:"photoJpeg"`
	BarcodeSeedHex string `json:"barcodeSeedHex"`
	CashlessKey    string `json:"cashlessKey"`
}

// GetID returns the value of ID.
func (s *DiningUser) GetID() string {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *DiningUser) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *DiningUser) GetLastName() string {
	return s.LastName
}

// GetPhotoJpeg returns the value of PhotoJpeg.
func (s *DiningUser) GetPhotoJpeg() []byte {
	return s.PhotoJpeg
}

// GetBarcodeSeedHex returns the value of BarcodeSeedHex.
func (s *DiningUser) GetBarcodeSeedHex() string {
	return s.BarcodeSeedHex
}

// GetCashlessKey returns the value of CashlessKey.
func (s *DiningUser) GetCashlessKey() string {
	return s.CashlessKey
}

// SetID sets the value of ID.
func (s *DiningUser) SetID(val string) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *DiningUser) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *DiningUser) SetLastName(val string) {
	s.LastName = val
}

// SetPhotoJpeg sets the value of PhotoJpeg.
func (s *DiningUser) SetPhotoJpeg(val []byte) {
	s.PhotoJpeg = val
}

// SetBarcodeSeedHex sets the value of BarcodeSeedHex.
func (s *DiningUser) SetBarcodeSeedHex(val string) {
	s.BarcodeSeedHex = val
}

// SetCashlessKey sets the value of CashlessKey.
func (s *DiningUser) SetCashlessKey(val string) {
	s.CashlessKey = val
}

func (*DiningUser) getV1DiningUserRes() {}

// Ref: #/components/schemas/DiningUserAccount
type DiningUserAccount struct {
	AccountId string                   `json:"accountId"`
	Name      string                   `json:"name"`
	Balance   DiningUserAccountBalance `json:"balance"`
}

// GetAccountId returns the value of AccountId.
func (s *DiningUserAccount) GetAccountId() string {
	return s.AccountId
}

// GetName returns the value of Name.
func (s *DiningUserAccount) GetName() string {
	return s.Name
}

// GetBalance returns the value of Balance.
func (s *DiningUserAccount) GetBalance() DiningUserAccountBalance {
	return s.Balance
}

// SetAccountId sets the value of AccountId.
func (s *DiningUserAccount) SetAccountId(val string) {
	s.AccountId = val
}

// SetName sets the value of Name.
func (s *DiningUserAccount) SetName(val string) {
	s.Name = val
}

// SetBalance sets the value of Balance.
func (s *DiningUserAccount) SetBalance(val DiningUserAccountBalance) {
	s.Balance = val
}

// DiningUserAccountBalance represents sum type.
type DiningUserAccountBalance struct {
	Type                   DiningUserAccountBalanceType // switch on this field
	DiningUserMoneyBalance DiningUserMoneyBalance
	DiningUserSwipeBalance DiningUserSwipeBalance
}

// DiningUserAccountBalanceType is oneOf type of DiningUserAccountBalance.
type DiningUserAccountBalanceType string

// Possible values for DiningUserAccountBalanceType.
const (
	DiningUserMoneyBalanceDiningUserAccountBalance DiningUserAccountBalanceType = "DiningUserMoneyBalance"
	DiningUserSwipeBalanceDiningUserAccountBalance DiningUserAccountBalanceType = "DiningUserSwipeBalance"
)

// IsDiningUserMoneyBalance reports whether DiningUserAccountBalance is DiningUserMoneyBalance.
func (s DiningUserAccountBalance) IsDiningUserMoneyBalance() bool {
	return s.Type == DiningUserMoneyBalanceDiningUserAccountBalance
}

// IsDiningUserSwipeBalance reports whether DiningUserAccountBalance is DiningUserSwipeBalance.
func (s DiningUserAccountBalance) IsDiningUserSwipeBalance() bool {
	return s.Type == DiningUserSwipeBalanceDiningUserAccountBalance
}

// SetDiningUserMoneyBalance sets DiningUserAccountBalance to DiningUserMoneyBalance.
func (s *DiningUserAccountBalance) SetDiningUserMoneyBalance(v DiningUserMoneyBalance) {
	s.Type = DiningUserMoneyBalanceDiningUserAccountBalance
	s.DiningUserMoneyBalance = v
}

// GetDiningUserMoneyBalance returns DiningUserMoneyBalance and true boolean if DiningUserAccountBalance is DiningUserMoneyBalance.
func (s DiningUserAccountBalance) GetDiningUserMoneyBalance() (v DiningUserMoneyBalance, ok bool) {
	if !s.IsDiningUserMoneyBalance() {
		return v, false
	}
	return s.DiningUserMoneyBalance, true
}

// NewDiningUserMoneyBalanceDiningUserAccountBalance returns new DiningUserAccountBalance from DiningUserMoneyBalance.
func NewDiningUserMoneyBalanceDiningUserAccountBalance(v DiningUserMoneyBalance) DiningUserAccountBalance {
	var s DiningUserAccountBalance
	s.SetDiningUserMoneyBalance(v)
	return s
}

// SetDiningUserSwipeBalance sets DiningUserAccountBalance to DiningUserSwipeBalance.
func (s *DiningUserAccountBalance) SetDiningUserSwipeBalance(v DiningUserSwipeBalance) {
	s.Type = DiningUserSwipeBalanceDiningUserAccountBalance
	s.DiningUserSwipeBalance = v
}

// GetDiningUserSwipeBalance returns DiningUserSwipeBalance and true boolean if DiningUserAccountBalance is DiningUserSwipeBalance.
func (s DiningUserAccountBalance) GetDiningUserSwipeBalance() (v DiningUserSwipeBalance, ok bool) {
	if !s.IsDiningUserSwipeBalance() {
		return v, false
	}
	return s.DiningUserSwipeBalance, true
}

// NewDiningUserSwipeBalanceDiningUserAccountBalance returns new DiningUserAccountBalance from DiningUserSwipeBalance.
func NewDiningUserSwipeBalanceDiningUserAccountBalance(v DiningUserSwipeBalance) DiningUserAccountBalance {
	var s DiningUserAccountBalance
	s.SetDiningUserSwipeBalance(v)
	return s
}

type DiningUserMoneyBalance struct {
	Money float64 `json:"money"`
}

// GetMoney returns the value of Money.
func (s *DiningUserMoneyBalance) GetMoney() float64 {
	return s.Money
}

// SetMoney sets the value of Money.
func (s *DiningUserMoneyBalance) SetMoney(val float64) {
	s.Money = val
}

type DiningUserSwipeBalance struct {
	Swipes int `json:"swipes"`
}

// GetSwipes returns the value of Swipes.
func (s *DiningUserSwipeBalance) GetSwipes() int {
	return s.Swipes
}

// SetSwipes sets the value of Swipes.
func (s *DiningUserSwipeBalance) SetSwipes(val int) {
	s.Swipes = val
}

// Ref: #/components/schemas/Eatery
type Eatery struct {
	ID             int                    `json:"id"`
	Name           string                 `json:"name"`
	NameShort      string                 `json:"nameShort"`
	ImagePath      string                 `json:"imagePath"`
	Latitude       float64                `json:"latitude"`
	Longitude      float64                `json:"longitude"`
	Location       string                 `json:"location"`
	Hours          []Hours                `json:"hours"`
	Region         string                 `json:"region"`
	PayMethods     []string               `json:"payMethods"`
	Categories     []EateryCategoriesItem `json:"categories"`
	NextWeekEvents EateryNextWeekEvents   `json:"nextWeekEvents"`
	AllWeekMenu    []EateryMenuCategory   `json:"allWeekMenu"`
}

// GetID returns the value of ID.
func (s *Eatery) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Eatery) GetName() string {
	return s.Name
}

// GetNameShort returns the value of NameShort.
func (s *Eatery) GetNameShort() string {
	return s.NameShort
}

// GetImagePath returns the value of ImagePath.
func (s *Eatery) GetImagePath() string {
	return s.ImagePath
}

// GetLatitude returns the value of Latitude.
func (s *Eatery) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Eatery) GetLongitude() float64 {
	return s.Longitude
}

// GetLocation returns the value of Location.
func (s *Eatery) GetLocation() string {
	return s.Location
}

// GetHours returns the value of Hours.
func (s *Eatery) GetHours() []Hours {
	return s.Hours
}

// GetRegion returns the value of Region.
func (s *Eatery) GetRegion() string {
	return s.Region
}

// GetPayMethods returns the value of PayMethods.
func (s *Eatery) GetPayMethods() []string {
	return s.PayMethods
}

// GetCategories returns the value of Categories.
func (s *Eatery) GetCategories() []EateryCategoriesItem {
	return s.Categories
}

// GetNextWeekEvents returns the value of NextWeekEvents.
func (s *Eatery) GetNextWeekEvents() EateryNextWeekEvents {
	return s.NextWeekEvents
}

// GetAllWeekMenu returns the value of AllWeekMenu.
func (s *Eatery) GetAllWeekMenu() []EateryMenuCategory {
	return s.AllWeekMenu
}

// SetID sets the value of ID.
func (s *Eatery) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Eatery) SetName(val string) {
	s.Name = val
}

// SetNameShort sets the value of NameShort.
func (s *Eatery) SetNameShort(val string) {
	s.NameShort = val
}

// SetImagePath sets the value of ImagePath.
func (s *Eatery) SetImagePath(val string) {
	s.ImagePath = val
}

// SetLatitude sets the value of Latitude.
func (s *Eatery) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Eatery) SetLongitude(val float64) {
	s.Longitude = val
}

// SetLocation sets the value of Location.
func (s *Eatery) SetLocation(val string) {
	s.Location = val
}

// SetHours sets the value of Hours.
func (s *Eatery) SetHours(val []Hours) {
	s.Hours = val
}

// SetRegion sets the value of Region.
func (s *Eatery) SetRegion(val string) {
	s.Region = val
}

// SetPayMethods sets the value of PayMethods.
func (s *Eatery) SetPayMethods(val []string) {
	s.PayMethods = val
}

// SetCategories sets the value of Categories.
func (s *Eatery) SetCategories(val []EateryCategoriesItem) {
	s.Categories = val
}

// SetNextWeekEvents sets the value of NextWeekEvents.
func (s *Eatery) SetNextWeekEvents(val EateryNextWeekEvents) {
	s.NextWeekEvents = val
}

// SetAllWeekMenu sets the value of AllWeekMenu.
func (s *Eatery) SetAllWeekMenu(val []EateryMenuCategory) {
	s.AllWeekMenu = val
}

type EateryCategoriesItem string

const (
	EateryCategoriesItemConvenienceStore EateryCategoriesItem = "convenienceStore"
	EateryCategoriesItemCafe             EateryCategoriesItem = "cafe"
	EateryCategoriesItemDiningRoom       EateryCategoriesItem = "diningRoom"
	EateryCategoriesItemCoffeeShop       EateryCategoriesItem = "coffeeShop"
	EateryCategoriesItemCart             EateryCategoriesItem = "cart"
	EateryCategoriesItemFoodCourt        EateryCategoriesItem = "foodCourt"
)

// AllValues returns all EateryCategoriesItem values.
func (EateryCategoriesItem) AllValues() []EateryCategoriesItem {
	return []EateryCategoriesItem{
		EateryCategoriesItemConvenienceStore,
		EateryCategoriesItemCafe,
		EateryCategoriesItemDiningRoom,
		EateryCategoriesItemCoffeeShop,
		EateryCategoriesItemCart,
		EateryCategoriesItemFoodCourt,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EateryCategoriesItem) MarshalText() ([]byte, error) {
	switch s {
	case EateryCategoriesItemConvenienceStore:
		return []byte(s), nil
	case EateryCategoriesItemCafe:
		return []byte(s), nil
	case EateryCategoriesItemDiningRoom:
		return []byte(s), nil
	case EateryCategoriesItemCoffeeShop:
		return []byte(s), nil
	case EateryCategoriesItemCart:
		return []byte(s), nil
	case EateryCategoriesItemFoodCourt:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EateryCategoriesItem) UnmarshalText(data []byte) error {
	switch EateryCategoriesItem(data) {
	case EateryCategoriesItemConvenienceStore:
		*s = EateryCategoriesItemConvenienceStore
		return nil
	case EateryCategoriesItemCafe:
		*s = EateryCategoriesItemCafe
		return nil
	case EateryCategoriesItemDiningRoom:
		*s = EateryCategoriesItemDiningRoom
		return nil
	case EateryCategoriesItemCoffeeShop:
		*s = EateryCategoriesItemCoffeeShop
		return nil
	case EateryCategoriesItemCart:
		*s = EateryCategoriesItemCart
		return nil
	case EateryCategoriesItemFoodCourt:
		*s = EateryCategoriesItemFoodCourt
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/EateryEvent
type EateryEvent struct {
	Start          time.Time            `json:"start"`
	End            time.Time            `json:"end"`
	MenuCategories []EateryMenuCategory `json:"menuCategories"`
}

// GetStart returns the value of Start.
func (s *EateryEvent) GetStart() time.Time {
	return s.Start
}

// GetEnd returns the value of End.
func (s *EateryEvent) GetEnd() time.Time {
	return s.End
}

// GetMenuCategories returns the value of MenuCategories.
func (s *EateryEvent) GetMenuCategories() []EateryMenuCategory {
	return s.MenuCategories
}

// SetStart sets the value of Start.
func (s *EateryEvent) SetStart(val time.Time) {
	s.Start = val
}

// SetEnd sets the value of End.
func (s *EateryEvent) SetEnd(val time.Time) {
	s.End = val
}

// SetMenuCategories sets the value of MenuCategories.
func (s *EateryEvent) SetMenuCategories(val []EateryMenuCategory) {
	s.MenuCategories = val
}

// Ref: #/components/schemas/EateryMenuCategory
type EateryMenuCategory struct {
	Name  string                        `json:"name"`
	Items []EateryMenuCategoryItemsItem `json:"items"`
}

// GetName returns the value of Name.
func (s *EateryMenuCategory) GetName() string {
	return s.Name
}

// GetItems returns the value of Items.
func (s *EateryMenuCategory) GetItems() []EateryMenuCategoryItemsItem {
	return s.Items
}

// SetName sets the value of Name.
func (s *EateryMenuCategory) SetName(val string) {
	s.Name = val
}

// SetItems sets the value of Items.
func (s *EateryMenuCategory) SetItems(val []EateryMenuCategoryItemsItem) {
	s.Items = val
}

type EateryMenuCategoryItemsItem struct {
	Name    string `json:"name"`
	Healthy bool   `json:"healthy"`
}

// GetName returns the value of Name.
func (s *EateryMenuCategoryItemsItem) GetName() string {
	return s.Name
}

// GetHealthy returns the value of Healthy.
func (s *EateryMenuCategoryItemsItem) GetHealthy() bool {
	return s.Healthy
}

// SetName sets the value of Name.
func (s *EateryMenuCategoryItemsItem) SetName(val string) {
	s.Name = val
}

// SetHealthy sets the value of Healthy.
func (s *EateryMenuCategoryItemsItem) SetHealthy(val bool) {
	s.Healthy = val
}

type EateryNextWeekEvents struct {
	Monday    []EateryEvent `json:"monday"`
	Tuesday   []EateryEvent `json:"tuesday"`
	Wednesday []EateryEvent `json:"wednesday"`
	Thursday  []EateryEvent `json:"thursday"`
	Friday    []EateryEvent `json:"friday"`
	Saturday  []EateryEvent `json:"saturday"`
	Sunday    []EateryEvent `json:"sunday"`
}

// GetMonday returns the value of Monday.
func (s *EateryNextWeekEvents) GetMonday() []EateryEvent {
	return s.Monday
}

// GetTuesday returns the value of Tuesday.
func (s *EateryNextWeekEvents) GetTuesday() []EateryEvent {
	return s.Tuesday
}

// GetWednesday returns the value of Wednesday.
func (s *EateryNextWeekEvents) GetWednesday() []EateryEvent {
	return s.Wednesday
}

// GetThursday returns the value of Thursday.
func (s *EateryNextWeekEvents) GetThursday() []EateryEvent {
	return s.Thursday
}

// GetFriday returns the value of Friday.
func (s *EateryNextWeekEvents) GetFriday() []EateryEvent {
	return s.Friday
}

// GetSaturday returns the value of Saturday.
func (s *EateryNextWeekEvents) GetSaturday() []EateryEvent {
	return s.Saturday
}

// GetSunday returns the value of Sunday.
func (s *EateryNextWeekEvents) GetSunday() []EateryEvent {
	return s.Sunday
}

// SetMonday sets the value of Monday.
func (s *EateryNextWeekEvents) SetMonday(val []EateryEvent) {
	s.Monday = val
}

// SetTuesday sets the value of Tuesday.
func (s *EateryNextWeekEvents) SetTuesday(val []EateryEvent) {
	s.Tuesday = val
}

// SetWednesday sets the value of Wednesday.
func (s *EateryNextWeekEvents) SetWednesday(val []EateryEvent) {
	s.Wednesday = val
}

// SetThursday sets the value of Thursday.
func (s *EateryNextWeekEvents) SetThursday(val []EateryEvent) {
	s.Thursday = val
}

// SetFriday sets the value of Friday.
func (s *EateryNextWeekEvents) SetFriday(val []EateryEvent) {
	s.Friday = val
}

// SetSaturday sets the value of Saturday.
func (s *EateryNextWeekEvents) SetSaturday(val []EateryEvent) {
	s.Saturday = val
}

// SetSunday sets the value of Sunday.
func (s *EateryNextWeekEvents) SetSunday(val []EateryEvent) {
	s.Sunday = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type GetV1DiningUserAccountsOKApplicationJSON []DiningUserAccount

func (*GetV1DiningUserAccountsOKApplicationJSON) getV1DiningUserAccountsRes() {}

// GetV1DiningUserAccountsUnauthorized is response for GetV1DiningUserAccounts operation.
type GetV1DiningUserAccountsUnauthorized struct{}

func (*GetV1DiningUserAccountsUnauthorized) getV1DiningUserAccountsRes() {}

type GetV1DiningUserBarcodeOKApplicationJSON string

func (*GetV1DiningUserBarcodeOKApplicationJSON) getV1DiningUserBarcodeRes() {}

// GetV1DiningUserBarcodeUnauthorized is response for GetV1DiningUserBarcode operation.
type GetV1DiningUserBarcodeUnauthorized struct{}

func (*GetV1DiningUserBarcodeUnauthorized) getV1DiningUserBarcodeRes() {}

type GetV1DiningUserSessionOKApplicationJSON string

func (*GetV1DiningUserSessionOKApplicationJSON) getV1DiningUserSessionRes() {}

// GetV1DiningUserSessionUnauthorized is response for GetV1DiningUserSession operation.
type GetV1DiningUserSessionUnauthorized struct{}

func (*GetV1DiningUserSessionUnauthorized) getV1DiningUserSessionRes() {}

// GetV1DiningUserUnauthorized is response for GetV1DiningUser operation.
type GetV1DiningUserUnauthorized struct{}

func (*GetV1DiningUserUnauthorized) getV1DiningUserRes() {}

// Ref: #/components/schemas/Gym
type Gym struct {
	ID                  int                          `json:"id"`
	Name                string                       `json:"name"`
	ImagePath           string                       `json:"imagePath"`
	Latitude            float64                      `json:"latitude"`
	Longitude           float64                      `json:"longitude"`
	Hours               []Hours                      `json:"hours"`
	Facilities          []GymFacilitiesItem          `json:"facilities"`
	EquipmentCategories []GymEquipmentCategoriesItem `json:"equipmentCategories"`
	Capacity            NilGymCapacity               `json:"capacity"`
}

// GetID returns the value of ID.
func (s *Gym) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Gym) GetName() string {
	return s.Name
}

// GetImagePath returns the value of ImagePath.
func (s *Gym) GetImagePath() string {
	return s.ImagePath
}

// GetLatitude returns the value of Latitude.
func (s *Gym) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Gym) GetLongitude() float64 {
	return s.Longitude
}

// GetHours returns the value of Hours.
func (s *Gym) GetHours() []Hours {
	return s.Hours
}

// GetFacilities returns the value of Facilities.
func (s *Gym) GetFacilities() []GymFacilitiesItem {
	return s.Facilities
}

// GetEquipmentCategories returns the value of EquipmentCategories.
func (s *Gym) GetEquipmentCategories() []GymEquipmentCategoriesItem {
	return s.EquipmentCategories
}

// GetCapacity returns the value of Capacity.
func (s *Gym) GetCapacity() NilGymCapacity {
	return s.Capacity
}

// SetID sets the value of ID.
func (s *Gym) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Gym) SetName(val string) {
	s.Name = val
}

// SetImagePath sets the value of ImagePath.
func (s *Gym) SetImagePath(val string) {
	s.ImagePath = val
}

// SetLatitude sets the value of Latitude.
func (s *Gym) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Gym) SetLongitude(val float64) {
	s.Longitude = val
}

// SetHours sets the value of Hours.
func (s *Gym) SetHours(val []Hours) {
	s.Hours = val
}

// SetFacilities sets the value of Facilities.
func (s *Gym) SetFacilities(val []GymFacilitiesItem) {
	s.Facilities = val
}

// SetEquipmentCategories sets the value of EquipmentCategories.
func (s *Gym) SetEquipmentCategories(val []GymEquipmentCategoriesItem) {
	s.EquipmentCategories = val
}

// SetCapacity sets the value of Capacity.
func (s *Gym) SetCapacity(val NilGymCapacity) {
	s.Capacity = val
}

type GymCapacity struct {
	Total       int       `json:"total"`
	Percentage  NilInt    `json:"percentage"`
	LastUpdated time.Time `json:"lastUpdated"`
}

// GetTotal returns the value of Total.
func (s *GymCapacity) GetTotal() int {
	return s.Total
}

// GetPercentage returns the value of Percentage.
func (s *GymCapacity) GetPercentage() NilInt {
	return s.Percentage
}

// GetLastUpdated returns the value of LastUpdated.
func (s *GymCapacity) GetLastUpdated() time.Time {
	return s.LastUpdated
}

// SetTotal sets the value of Total.
func (s *GymCapacity) SetTotal(val int) {
	s.Total = val
}

// SetPercentage sets the value of Percentage.
func (s *GymCapacity) SetPercentage(val NilInt) {
	s.Percentage = val
}

// SetLastUpdated sets the value of LastUpdated.
func (s *GymCapacity) SetLastUpdated(val time.Time) {
	s.LastUpdated = val
}

// Ref: #/components/schemas/GymCapacityData
type GymCapacityData struct {
	LocationId int                    `json:"locationId"`
	Points     []GymCapacityDataPoint `json:"points"`
}

// GetLocationId returns the value of LocationId.
func (s *GymCapacityData) GetLocationId() int {
	return s.LocationId
}

// GetPoints returns the value of Points.
func (s *GymCapacityData) GetPoints() []GymCapacityDataPoint {
	return s.Points
}

// SetLocationId sets the value of LocationId.
func (s *GymCapacityData) SetLocationId(val int) {
	s.LocationId = val
}

// SetPoints sets the value of Points.
func (s *GymCapacityData) SetPoints(val []GymCapacityDataPoint) {
	s.Points = val
}

// Ref: #/components/schemas/GymCapacityDataPoint
type GymCapacityDataPoint struct {
	LastUpdated time.Time `json:"lastUpdated"`
	Count       int       `json:"count"`
}

// GetLastUpdated returns the value of LastUpdated.
func (s *GymCapacityDataPoint) GetLastUpdated() time.Time {
	return s.LastUpdated
}

// GetCount returns the value of Count.
func (s *GymCapacityDataPoint) GetCount() int {
	return s.Count
}

// SetLastUpdated sets the value of LastUpdated.
func (s *GymCapacityDataPoint) SetLastUpdated(val time.Time) {
	s.LastUpdated = val
}

// SetCount sets the value of Count.
func (s *GymCapacityDataPoint) SetCount(val int) {
	s.Count = val
}

// Ref: #/components/schemas/GymCapacityPredictionPoint
type GymCapacityPredictionPoint struct {
	Timestamp        time.Time `json:"timestamp"`
	PredictionMadeAt time.Time `json:"predictionMadeAt"`
	Count            int       `json:"count"`
}

// GetTimestamp returns the value of Timestamp.
func (s *GymCapacityPredictionPoint) GetTimestamp() time.Time {
	return s.Timestamp
}

// GetPredictionMadeAt returns the value of PredictionMadeAt.
func (s *GymCapacityPredictionPoint) GetPredictionMadeAt() time.Time {
	return s.PredictionMadeAt
}

// GetCount returns the value of Count.
func (s *GymCapacityPredictionPoint) GetCount() int {
	return s.Count
}

// SetTimestamp sets the value of Timestamp.
func (s *GymCapacityPredictionPoint) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

// SetPredictionMadeAt sets the value of PredictionMadeAt.
func (s *GymCapacityPredictionPoint) SetPredictionMadeAt(val time.Time) {
	s.PredictionMadeAt = val
}

// SetCount sets the value of Count.
func (s *GymCapacityPredictionPoint) SetCount(val int) {
	s.Count = val
}

// Ref: #/components/schemas/GymCapacityPredictions
type GymCapacityPredictions struct {
	LocationId int                          `json:"locationId"`
	Points     []GymCapacityPredictionPoint `json:"points"`
}

// GetLocationId returns the value of LocationId.
func (s *GymCapacityPredictions) GetLocationId() int {
	return s.LocationId
}

// GetPoints returns the value of Points.
func (s *GymCapacityPredictions) GetPoints() []GymCapacityPredictionPoint {
	return s.Points
}

// SetLocationId sets the value of LocationId.
func (s *GymCapacityPredictions) SetLocationId(val int) {
	s.LocationId = val
}

// SetPoints sets the value of Points.
func (s *GymCapacityPredictions) SetPoints(val []GymCapacityPredictionPoint) {
	s.Points = val
}

type GymEquipmentCategoriesItem struct {
	CategoryType GymEquipmentCategoriesItemCategoryType `json:"categoryType"`
	Items        []string                               `json:"items"`
}

// GetCategoryType returns the value of CategoryType.
func (s *GymEquipmentCategoriesItem) GetCategoryType() GymEquipmentCategoriesItemCategoryType {
	return s.CategoryType
}

// GetItems returns the value of Items.
func (s *GymEquipmentCategoriesItem) GetItems() []string {
	return s.Items
}

// SetCategoryType sets the value of CategoryType.
func (s *GymEquipmentCategoriesItem) SetCategoryType(val GymEquipmentCategoriesItemCategoryType) {
	s.CategoryType = val
}

// SetItems sets the value of Items.
func (s *GymEquipmentCategoriesItem) SetItems(val []string) {
	s.Items = val
}

type GymEquipmentCategoriesItemCategoryType string

const (
	GymEquipmentCategoriesItemCategoryTypeTreadmills  GymEquipmentCategoriesItemCategoryType = "treadmills"
	GymEquipmentCategoriesItemCategoryTypeEllipticals GymEquipmentCategoriesItemCategoryType = "ellipticals"
	GymEquipmentCategoriesItemCategoryTypeRowing      GymEquipmentCategoriesItemCategoryType = "rowing"
	GymEquipmentCategoriesItemCategoryTypeBike        GymEquipmentCategoriesItemCategoryType = "bike"
	GymEquipmentCategoriesItemCategoryTypeLifting     GymEquipmentCategoriesItemCategoryType = "lifting"
	GymEquipmentCategoriesItemCategoryTypeMachines    GymEquipmentCategoriesItemCategoryType = "machines"
	GymEquipmentCategoriesItemCategoryTypeFreeWeights GymEquipmentCategoriesItemCategoryType = "freeWeights"
	GymEquipmentCategoriesItemCategoryTypeMisc        GymEquipmentCategoriesItemCategoryType = "misc"
)

// AllValues returns all GymEquipmentCategoriesItemCategoryType values.
func (GymEquipmentCategoriesItemCategoryType) AllValues() []GymEquipmentCategoriesItemCategoryType {
	return []GymEquipmentCategoriesItemCategoryType{
		GymEquipmentCategoriesItemCategoryTypeTreadmills,
		GymEquipmentCategoriesItemCategoryTypeEllipticals,
		GymEquipmentCategoriesItemCategoryTypeRowing,
		GymEquipmentCategoriesItemCategoryTypeBike,
		GymEquipmentCategoriesItemCategoryTypeLifting,
		GymEquipmentCategoriesItemCategoryTypeMachines,
		GymEquipmentCategoriesItemCategoryTypeFreeWeights,
		GymEquipmentCategoriesItemCategoryTypeMisc,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GymEquipmentCategoriesItemCategoryType) MarshalText() ([]byte, error) {
	switch s {
	case GymEquipmentCategoriesItemCategoryTypeTreadmills:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeEllipticals:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeRowing:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeBike:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeLifting:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeMachines:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeFreeWeights:
		return []byte(s), nil
	case GymEquipmentCategoriesItemCategoryTypeMisc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GymEquipmentCategoriesItemCategoryType) UnmarshalText(data []byte) error {
	switch GymEquipmentCategoriesItemCategoryType(data) {
	case GymEquipmentCategoriesItemCategoryTypeTreadmills:
		*s = GymEquipmentCategoriesItemCategoryTypeTreadmills
		return nil
	case GymEquipmentCategoriesItemCategoryTypeEllipticals:
		*s = GymEquipmentCategoriesItemCategoryTypeEllipticals
		return nil
	case GymEquipmentCategoriesItemCategoryTypeRowing:
		*s = GymEquipmentCategoriesItemCategoryTypeRowing
		return nil
	case GymEquipmentCategoriesItemCategoryTypeBike:
		*s = GymEquipmentCategoriesItemCategoryTypeBike
		return nil
	case GymEquipmentCategoriesItemCategoryTypeLifting:
		*s = GymEquipmentCategoriesItemCategoryTypeLifting
		return nil
	case GymEquipmentCategoriesItemCategoryTypeMachines:
		*s = GymEquipmentCategoriesItemCategoryTypeMachines
		return nil
	case GymEquipmentCategoriesItemCategoryTypeFreeWeights:
		*s = GymEquipmentCategoriesItemCategoryTypeFreeWeights
		return nil
	case GymEquipmentCategoriesItemCategoryTypeMisc:
		*s = GymEquipmentCategoriesItemCategoryTypeMisc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GymFacilitiesItem struct {
	FacilityType GymFacilitiesItemFacilityType `json:"facilityType"`
	Name         string                        `json:"name"`
}

// GetFacilityType returns the value of FacilityType.
func (s *GymFacilitiesItem) GetFacilityType() GymFacilitiesItemFacilityType {
	return s.FacilityType
}

// GetName returns the value of Name.
func (s *GymFacilitiesItem) GetName() string {
	return s.Name
}

// SetFacilityType sets the value of FacilityType.
func (s *GymFacilitiesItem) SetFacilityType(val GymFacilitiesItemFacilityType) {
	s.FacilityType = val
}

// SetName sets the value of Name.
func (s *GymFacilitiesItem) SetName(val string) {
	s.Name = val
}

type GymFacilitiesItemFacilityType string

const (
	GymFacilitiesItemFacilityTypePool       GymFacilitiesItemFacilityType = "pool"
	GymFacilitiesItemFacilityTypeBasketball GymFacilitiesItemFacilityType = "basketball"
	GymFacilitiesItemFacilityTypeBowling    GymFacilitiesItemFacilityType = "bowling"
	GymFacilitiesItemFacilityTypeUnknown    GymFacilitiesItemFacilityType = "unknown"
)

// AllValues returns all GymFacilitiesItemFacilityType values.
func (GymFacilitiesItemFacilityType) AllValues() []GymFacilitiesItemFacilityType {
	return []GymFacilitiesItemFacilityType{
		GymFacilitiesItemFacilityTypePool,
		GymFacilitiesItemFacilityTypeBasketball,
		GymFacilitiesItemFacilityTypeBowling,
		GymFacilitiesItemFacilityTypeUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GymFacilitiesItemFacilityType) MarshalText() ([]byte, error) {
	switch s {
	case GymFacilitiesItemFacilityTypePool:
		return []byte(s), nil
	case GymFacilitiesItemFacilityTypeBasketball:
		return []byte(s), nil
	case GymFacilitiesItemFacilityTypeBowling:
		return []byte(s), nil
	case GymFacilitiesItemFacilityTypeUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GymFacilitiesItemFacilityType) UnmarshalText(data []byte) error {
	switch GymFacilitiesItemFacilityType(data) {
	case GymFacilitiesItemFacilityTypePool:
		*s = GymFacilitiesItemFacilityTypePool
		return nil
	case GymFacilitiesItemFacilityTypeBasketball:
		*s = GymFacilitiesItemFacilityTypeBasketball
		return nil
	case GymFacilitiesItemFacilityTypeBowling:
		*s = GymFacilitiesItemFacilityTypeBowling
		return nil
	case GymFacilitiesItemFacilityTypeUnknown:
		*s = GymFacilitiesItemFacilityTypeUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Hours
type Hours struct {
	Start time.Time `json:"start"`
	End   time.Time `json:"end"`
}

// GetStart returns the value of Start.
func (s *Hours) GetStart() time.Time {
	return s.Start
}

// GetEnd returns the value of End.
func (s *Hours) GetEnd() time.Time {
	return s.End
}

// SetStart sets the value of Start.
func (s *Hours) SetStart(val time.Time) {
	s.Start = val
}

// SetEnd sets the value of End.
func (s *Hours) SetEnd(val time.Time) {
	s.End = val
}

// Ref: #/components/schemas/Library
type Library struct {
	ID               int      `json:"id"`
	Name             string   `json:"name"`
	ImagePath        string   `json:"imagePath"`
	Latitude         float64  `json:"latitude"`
	Longitude        float64  `json:"longitude"`
	Hours            []Hours  `json:"hours"`
	CardAccessHours  []Hours  `json:"cardAccessHours"`
	PrinterLocations []string `json:"printerLocations"`
}

// GetID returns the value of ID.
func (s *Library) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Library) GetName() string {
	return s.Name
}

// GetImagePath returns the value of ImagePath.
func (s *Library) GetImagePath() string {
	return s.ImagePath
}

// GetLatitude returns the value of Latitude.
func (s *Library) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Library) GetLongitude() float64 {
	return s.Longitude
}

// GetHours returns the value of Hours.
func (s *Library) GetHours() []Hours {
	return s.Hours
}

// GetCardAccessHours returns the value of CardAccessHours.
func (s *Library) GetCardAccessHours() []Hours {
	return s.CardAccessHours
}

// GetPrinterLocations returns the value of PrinterLocations.
func (s *Library) GetPrinterLocations() []string {
	return s.PrinterLocations
}

// SetID sets the value of ID.
func (s *Library) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Library) SetName(val string) {
	s.Name = val
}

// SetImagePath sets the value of ImagePath.
func (s *Library) SetImagePath(val string) {
	s.ImagePath = val
}

// SetLatitude sets the value of Latitude.
func (s *Library) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Library) SetLongitude(val float64) {
	s.Longitude = val
}

// SetHours sets the value of Hours.
func (s *Library) SetHours(val []Hours) {
	s.Hours = val
}

// SetCardAccessHours sets the value of CardAccessHours.
func (s *Library) SetCardAccessHours(val []Hours) {
	s.CardAccessHours = val
}

// SetPrinterLocations sets the value of PrinterLocations.
func (s *Library) SetPrinterLocations(val []string) {
	s.PrinterLocations = val
}

// NewNilAlertButton returns new NilAlertButton with value set to v.
func NewNilAlertButton(v AlertButton) NilAlertButton {
	return NilAlertButton{
		Value: v,
	}
}

// NilAlertButton is nullable AlertButton.
type NilAlertButton struct {
	Value AlertButton
	Null  bool
}

// SetTo sets value to v.
func (o *NilAlertButton) SetTo(v AlertButton) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilAlertButton) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilAlertButton) SetToNull() {
	o.Null = true
	var v AlertButton
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilAlertButton) Get() (v AlertButton, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilAlertButton) Or(d AlertButton) AlertButton {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilGymCapacity returns new NilGymCapacity with value set to v.
func NewNilGymCapacity(v GymCapacity) NilGymCapacity {
	return NilGymCapacity{
		Value: v,
	}
}

// NilGymCapacity is nullable GymCapacity.
type NilGymCapacity struct {
	Value GymCapacity
	Null  bool
}

// SetTo sets value to v.
func (o *NilGymCapacity) SetTo(v GymCapacity) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilGymCapacity) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilGymCapacity) SetToNull() {
	o.Null = true
	var v GymCapacity
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilGymCapacity) Get() (v GymCapacity, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilGymCapacity) Or(d GymCapacity) GymCapacity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilInt) SetToNull() {
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// PostV1DiningUserBadRequest is response for PostV1DiningUser operation.
type PostV1DiningUserBadRequest struct{}

func (*PostV1DiningUserBadRequest) postV1DiningUserRes() {}

// Merged schema.
type PostV1DiningUserCreated struct {
	Message        string `json:"message"`
	ID             string `json:"id"`
	FirstName      string `json:"firstName"`
	LastName       string `json:"lastName"`
	PhotoJpeg      []byte `json:"photoJpeg"`
	BarcodeSeedHex string `json:"barcodeSeedHex"`
	CashlessKey    string `json:"cashlessKey"`
}

// GetMessage returns the value of Message.
func (s *PostV1DiningUserCreated) GetMessage() string {
	return s.Message
}

// GetID returns the value of ID.
func (s *PostV1DiningUserCreated) GetID() string {
	return s.ID
}

// GetFirstName returns the value of FirstName.
func (s *PostV1DiningUserCreated) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *PostV1DiningUserCreated) GetLastName() string {
	return s.LastName
}

// GetPhotoJpeg returns the value of PhotoJpeg.
func (s *PostV1DiningUserCreated) GetPhotoJpeg() []byte {
	return s.PhotoJpeg
}

// GetBarcodeSeedHex returns the value of BarcodeSeedHex.
func (s *PostV1DiningUserCreated) GetBarcodeSeedHex() string {
	return s.BarcodeSeedHex
}

// GetCashlessKey returns the value of CashlessKey.
func (s *PostV1DiningUserCreated) GetCashlessKey() string {
	return s.CashlessKey
}

// SetMessage sets the value of Message.
func (s *PostV1DiningUserCreated) SetMessage(val string) {
	s.Message = val
}

// SetID sets the value of ID.
func (s *PostV1DiningUserCreated) SetID(val string) {
	s.ID = val
}

// SetFirstName sets the value of FirstName.
func (s *PostV1DiningUserCreated) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *PostV1DiningUserCreated) SetLastName(val string) {
	s.LastName = val
}

// SetPhotoJpeg sets the value of PhotoJpeg.
func (s *PostV1DiningUserCreated) SetPhotoJpeg(val []byte) {
	s.PhotoJpeg = val
}

// SetBarcodeSeedHex sets the value of BarcodeSeedHex.
func (s *PostV1DiningUserCreated) SetBarcodeSeedHex(val string) {
	s.BarcodeSeedHex = val
}

// SetCashlessKey sets the value of CashlessKey.
func (s *PostV1DiningUserCreated) SetCashlessKey(val string) {
	s.CashlessKey = val
}

func (*PostV1DiningUserCreated) postV1DiningUserRes() {}

// PostV1DiningUserUnauthorized is response for PostV1DiningUser operation.
type PostV1DiningUserUnauthorized struct{}

func (*PostV1DiningUserUnauthorized) postV1DiningUserRes() {}

// Ref: #/components/schemas/Printer
type Printer struct {
	Latitude  float64     `json:"latitude"`
	Longitude float64     `json:"longitude"`
	Location  NilString   `json:"location"`
	Room      NilString   `json:"room"`
	Type      PrinterType `json:"type"`
}

// GetLatitude returns the value of Latitude.
func (s *Printer) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Printer) GetLongitude() float64 {
	return s.Longitude
}

// GetLocation returns the value of Location.
func (s *Printer) GetLocation() NilString {
	return s.Location
}

// GetRoom returns the value of Room.
func (s *Printer) GetRoom() NilString {
	return s.Room
}

// GetType returns the value of Type.
func (s *Printer) GetType() PrinterType {
	return s.Type
}

// SetLatitude sets the value of Latitude.
func (s *Printer) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Printer) SetLongitude(val float64) {
	s.Longitude = val
}

// SetLocation sets the value of Location.
func (s *Printer) SetLocation(val NilString) {
	s.Location = val
}

// SetRoom sets the value of Room.
func (s *Printer) SetRoom(val NilString) {
	s.Room = val
}

// SetType sets the value of Type.
func (s *Printer) SetType(val PrinterType) {
	s.Type = val
}

type PrinterType string

const (
	PrinterTypeBlackAndWhite PrinterType = "blackAndWhite"
	PrinterTypeColor         PrinterType = "color"
	PrinterTypeColorScanCopy PrinterType = "colorScanCopy"
	PrinterTypeUnknown       PrinterType = "unknown"
)

// AllValues returns all PrinterType values.
func (PrinterType) AllValues() []PrinterType {
	return []PrinterType{
		PrinterTypeBlackAndWhite,
		PrinterTypeColor,
		PrinterTypeColorScanCopy,
		PrinterTypeUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PrinterType) MarshalText() ([]byte, error) {
	switch s {
	case PrinterTypeBlackAndWhite:
		return []byte(s), nil
	case PrinterTypeColor:
		return []byte(s), nil
	case PrinterTypeColorScanCopy:
		return []byte(s), nil
	case PrinterTypeUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PrinterType) UnmarshalText(data []byte) error {
	switch PrinterType(data) {
	case PrinterTypeBlackAndWhite:
		*s = PrinterTypeBlackAndWhite
		return nil
	case PrinterTypeColor:
		*s = PrinterTypeColor
		return nil
	case PrinterTypeColorScanCopy:
		*s = PrinterTypeColorScanCopy
		return nil
	case PrinterTypeUnknown:
		*s = PrinterTypeUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/StudyData
type StudyData struct {
	Libraries []Library `json:"libraries"`
	Printers  []Printer `json:"printers"`
}

// GetLibraries returns the value of Libraries.
func (s *StudyData) GetLibraries() []Library {
	return s.Libraries
}

// GetPrinters returns the value of Printers.
func (s *StudyData) GetPrinters() []Printer {
	return s.Printers
}

// SetLibraries sets the value of Libraries.
func (s *StudyData) SetLibraries(val []Library) {
	s.Libraries = val
}

// SetPrinters sets the value of Printers.
func (s *StudyData) SetPrinters(val []Printer) {
	s.Printers = val
}

// Ref: #/components/schemas/Success
type Success struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Success) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Success) SetMessage(val string) {
	s.Message = val
}

func (*Success) deleteV1DiningUserRes() {}

// Ref: #/components/schemas/Vehicle
type Vehicle struct {
	ID        VehicleID      `json:"id"`
	RouteId   VehicleRouteId `json:"routeId"`
	Direction string         `json:"direction"`
	Heading   int            `json:"heading"`
	// Speed in mph.
	Speed         float64   `json:"speed"`
	Latitude      float64   `json:"latitude"`
	Longitude     float64   `json:"longitude"`
	DisplayStatus string    `json:"displayStatus"`
	Destination   string    `json:"destination"`
	LastUpdated   time.Time `json:"lastUpdated"`
	LastStop      NilString `json:"lastStop"`
}

// GetID returns the value of ID.
func (s *Vehicle) GetID() VehicleID {
	return s.ID
}

// GetRouteId returns the value of RouteId.
func (s *Vehicle) GetRouteId() VehicleRouteId {
	return s.RouteId
}

// GetDirection returns the value of Direction.
func (s *Vehicle) GetDirection() string {
	return s.Direction
}

// GetHeading returns the value of Heading.
func (s *Vehicle) GetHeading() int {
	return s.Heading
}

// GetSpeed returns the value of Speed.
func (s *Vehicle) GetSpeed() float64 {
	return s.Speed
}

// GetLatitude returns the value of Latitude.
func (s *Vehicle) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *Vehicle) GetLongitude() float64 {
	return s.Longitude
}

// GetDisplayStatus returns the value of DisplayStatus.
func (s *Vehicle) GetDisplayStatus() string {
	return s.DisplayStatus
}

// GetDestination returns the value of Destination.
func (s *Vehicle) GetDestination() string {
	return s.Destination
}

// GetLastUpdated returns the value of LastUpdated.
func (s *Vehicle) GetLastUpdated() time.Time {
	return s.LastUpdated
}

// GetLastStop returns the value of LastStop.
func (s *Vehicle) GetLastStop() NilString {
	return s.LastStop
}

// SetID sets the value of ID.
func (s *Vehicle) SetID(val VehicleID) {
	s.ID = val
}

// SetRouteId sets the value of RouteId.
func (s *Vehicle) SetRouteId(val VehicleRouteId) {
	s.RouteId = val
}

// SetDirection sets the value of Direction.
func (s *Vehicle) SetDirection(val string) {
	s.Direction = val
}

// SetHeading sets the value of Heading.
func (s *Vehicle) SetHeading(val int) {
	s.Heading = val
}

// SetSpeed sets the value of Speed.
func (s *Vehicle) SetSpeed(val float64) {
	s.Speed = val
}

// SetLatitude sets the value of Latitude.
func (s *Vehicle) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *Vehicle) SetLongitude(val float64) {
	s.Longitude = val
}

// SetDisplayStatus sets the value of DisplayStatus.
func (s *Vehicle) SetDisplayStatus(val string) {
	s.DisplayStatus = val
}

// SetDestination sets the value of Destination.
func (s *Vehicle) SetDestination(val string) {
	s.Destination = val
}

// SetLastUpdated sets the value of LastUpdated.
func (s *Vehicle) SetLastUpdated(val time.Time) {
	s.LastUpdated = val
}

// SetLastStop sets the value of LastStop.
func (s *Vehicle) SetLastStop(val NilString) {
	s.LastStop = val
}

// VehicleID represents sum type.
type VehicleID struct {
	Type   VehicleIDType // switch on this field
	String string
	Int    int
}

// VehicleIDType is oneOf type of VehicleID.
type VehicleIDType string

// Possible values for VehicleIDType.
const (
	StringVehicleID VehicleIDType = "string"
	IntVehicleID    VehicleIDType = "int"
)

// IsString reports whether VehicleID is string.
func (s VehicleID) IsString() bool { return s.Type == StringVehicleID }

// IsInt reports whether VehicleID is int.
func (s VehicleID) IsInt() bool { return s.Type == IntVehicleID }

// SetString sets VehicleID to string.
func (s *VehicleID) SetString(v string) {
	s.Type = StringVehicleID
	s.String = v
}

// GetString returns string and true boolean if VehicleID is string.
func (s VehicleID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringVehicleID returns new VehicleID from string.
func NewStringVehicleID(v string) VehicleID {
	var s VehicleID
	s.SetString(v)
	return s
}

// SetInt sets VehicleID to int.
func (s *VehicleID) SetInt(v int) {
	s.Type = IntVehicleID
	s.Int = v
}

// GetInt returns int and true boolean if VehicleID is int.
func (s VehicleID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntVehicleID returns new VehicleID from int.
func NewIntVehicleID(v int) VehicleID {
	var s VehicleID
	s.SetInt(v)
	return s
}

// VehicleRouteId represents sum type.
type VehicleRouteId struct {
	Type   VehicleRouteIdType // switch on this field
	String string
	Int    int
}

// VehicleRouteIdType is oneOf type of VehicleRouteId.
type VehicleRouteIdType string

// Possible values for VehicleRouteIdType.
const (
	StringVehicleRouteId VehicleRouteIdType = "string"
	IntVehicleRouteId    VehicleRouteIdType = "int"
)

// IsString reports whether VehicleRouteId is string.
func (s VehicleRouteId) IsString() bool { return s.Type == StringVehicleRouteId }

// IsInt reports whether VehicleRouteId is int.
func (s VehicleRouteId) IsInt() bool { return s.Type == IntVehicleRouteId }

// SetString sets VehicleRouteId to string.
func (s *VehicleRouteId) SetString(v string) {
	s.Type = StringVehicleRouteId
	s.String = v
}

// GetString returns string and true boolean if VehicleRouteId is string.
func (s VehicleRouteId) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringVehicleRouteId returns new VehicleRouteId from string.
func NewStringVehicleRouteId(v string) VehicleRouteId {
	var s VehicleRouteId
	s.SetString(v)
	return s
}

// SetInt sets VehicleRouteId to int.
func (s *VehicleRouteId) SetInt(v int) {
	s.Type = IntVehicleRouteId
	s.Int = v
}

// GetInt returns int and true boolean if VehicleRouteId is int.
func (s VehicleRouteId) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntVehicleRouteId returns new VehicleRouteId from int.
func NewIntVehicleRouteId(v int) VehicleRouteId {
	var s VehicleRouteId
	s.SetInt(v)
	return s
}
