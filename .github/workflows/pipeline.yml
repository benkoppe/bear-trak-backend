name: Pipeline
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - production
          - staging
        default: staging

  push:
    branches:
      - "main"
      - "dev"

permissions:
  packages: write
  contents: read

env:
  COOLIFY_URL: ${{ secrets.COOLIFY_URL }}
  COOLIFY_API_TOKEN: ${{ secrets.COOLIFY_API_TOKEN }}
  COOLIFY_RESOURCE_IDS: >-
    ${{ ((github.event_name == 'workflow_dispatch' && inputs.environment == 'production') || (github.event_name == 'push' && endsWith(github.ref, '/main')))
        && format('{0},{1},{2},{3}',
          vars.GO_BEARTRAK_PRODUCTION_RESOURCE_ID,
          vars.GO_BLUETRAK_PRODUCTION_RESOURCE_ID,
          vars.OTP_CORNELL_PRODUCTION_RESOURCE_ID,
          vars.OTP_UMICH_PRODUCTION_RESOURCE_ID)
        || format('{0},{1},{2},{3}',
          vars.GO_BEARTRAK_STAGING_RESOURCE_ID,
          vars.GO_BLUETRAK_STAGING_RESOURCE_ID,
          vars.OTP_CORNELL_STAGING_RESOURCE_ID,
          vars.OTP_UMICH_STAGING_RESOURCE_ID)
    }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [go-server, otp-cornell, otp-umich, transitclock-umich]
        include:
          - service: go-server
            context: ./go-server
            dockerfile: go-server/Dockerfile
            tags: |
              ghcr.io/benkoppe/bear-trak-go:latest
              ghcr.io/benkoppe/bear-trak-go:${{ github.sha }}
          - service: otp-cornell
            context: ./otp
            dockerfile: otp/Dockerfile
            school: cornell
            tags: |
              ghcr.io/benkoppe/bear-trak-otp-cornell:latest
              ghcr.io/benkoppe/bear-trak-otp-cornell:${{ github.sha }}
          - service: otp-umich
            context: ./otp
            dockerfile: otp/Dockerfile
            school: umich
            tags: |
              ghcr.io/benkoppe/bear-trak-otp-umich:latest
              ghcr.io/benkoppe/bear-trak-otp-umich:${{ github.sha }}
          - service: transitclock
            context: ./transitclock
            dockerfile: transitclock/Dockerfile
            tags: |
              ghcr.io/benkoppe/trak-transitclock:latest
              ghcr.io/benkoppe/trak-transitclock:${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.tags }}
          build-args:
            ${{ matrix.school != '' && format('SCHOOL={0}', matrix.school) || '' }}

  coolify-deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-images
    steps:
      - name: Deploy all Coolify services
        run: |
          echo "$COOLIFY_RESOURCE_IDS" | tr ',' '\n' | while IFS= read -r id; do
            echo "Deploying Coolify resource ID: $id"
            curl -X PATCH "$COOLIFY_URL/api/v1/applications/$id" \
              -H "Authorization: Bearer $COOLIFY_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"git_commit_sha\": \"${GITHUB_SHA}\"}"
          
            curl -X GET "$COOLIFY_URL/api/v1/deploy?uuid=$id&force=false" \
              -H "Authorization: Bearer $COOLIFY_API_TOKEN"
          done
